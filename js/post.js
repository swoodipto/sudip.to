// Single post functionality
document.addEventListener('DOMContentLoaded', async () => {
    // Check if we're on a single post page
    const postContent = document.getElementById('post-content');
    
    if (postContent) {
        // Get the post slug from the URL
        const slug = window.location.pathname.split('/').pop();
        
        if (slug) {
            loadSinglePost(slug);
        } else {
            postContent.innerHTML = '<p>Post not found.</p>';
        }
    }
});

// Load site configuration
async function fetchSiteConfig() {
    try {
        const response = await fetch('/site.json');
        if (!response.ok) {
            throw new Error('Failed to load site configuration');
        }
        return await response.json();
    } catch (error) {
        console.error('Error loading site configuration:', error);
        return { 
            title: 'My Blog',
            description: 'My personal blog'
        };
    }
}

// Load a single blog post
async function loadSinglePost(slug) {
    const postContent = document.getElementById('post-content');
    const postTitle = document.getElementById('post-title');
    const postDate = document.getElementById('post-date');
    
    try {
        // Load site configuration
        const siteConfig = await fetchSiteConfig();
        
        // Fetch posts from _data/posts.json (generated by Jekyll)
        const indexResponse = await fetch('/posts.json');
        if (!indexResponse.ok) {
            throw new Error('Failed to load posts index');
        }
        
        const posts = await indexResponse.json();
        const post = posts.find(p => p.slug === slug);
        
        if (!post) {
            postContent.innerHTML = '<p>Post not found.</p>';
            return;
        }
        
        // Set post title and date
        if (postTitle) postTitle.textContent = post.title;
        if (postDate) postDate.textContent = formatDate(post.date);
        
        // The content is already rendered by Jekyll, so we don't need to fetch and convert markdown
        // This is just a fallback in case the content isn't rendered
        if (postContent.innerHTML === '<p>Loading post...</p>') {
            postContent.innerHTML = post.content || '<p>No content available.</p>';
        }
        
        // Update page title
        document.title = `${post.title} | ${siteConfig.title || 'My Blog'}`;
        
        // Update meta description
        const metaDescription = document.querySelector('meta[name="description"]');
        if (metaDescription) {
            metaDescription.setAttribute('content', post.excerpt || siteConfig.description);
        }
    } catch (error) {
        console.error('Error loading post:', error);
        postContent.innerHTML = '<p>Failed to load post. Please try again later.</p>';
    }
}

// Format date for display
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
} 